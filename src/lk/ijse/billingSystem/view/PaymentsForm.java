/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.billingSystem.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.billingSystem.controller.ControllerFactory;
import lk.ijse.billingSystem.controller.custom.BatchController;
import lk.ijse.billingSystem.controller.custom.CourseController;
import lk.ijse.billingSystem.controller.custom.PaymentController;
import lk.ijse.billingSystem.controller.custom.Reg_CourseController;
import lk.ijse.billingSystem.controller.custom.RegistrationController;
import lk.ijse.billingSystem.controller.custom.StudentController;
import lk.ijse.billingSystem.dto.BatchDTO;
import lk.ijse.billingSystem.dto.CourseDTO;
import lk.ijse.billingSystem.dto.PaymentDTO;
import lk.ijse.billingSystem.dto.Reg_CourseDTO;
import lk.ijse.billingSystem.dto.StudentDTO;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DEll
 */
public class PaymentsForm extends javax.swing.JFrame {

    StudentController studentController = (StudentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.STUDENT);
    RegistrationController registrationController = (RegistrationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.REGISTRATION);
    BatchController batchController = (BatchController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.BATCH);
    CourseController courseController = (CourseController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.COURSE);
    PaymentController paymentController = (PaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PAYMENT);
    Reg_CourseController reg_CourseController = (Reg_CourseController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.REG_COURSE);

    /**
     * Creates new form PaymentsForm
     */
    public PaymentsForm() {
        initComponents();
        loadDate();
        loadTime();
        pnlStudentPayment.setVisible(false);
        pnlRegistererd.setVisible(false);
        pnlNewCourse.setVisible(false);
        loadCourses();
        cmbNewCourse.setSelectedIndex(-1);
        btnView.setEnabled(false);
        txtFields();
        txtAmount.setEditable(false);
        txtDueDate.setEditable(false);
        txtTax.setEditable(false);
        txtName.setEditable(false);
        txtRID.setEditable(false);
        //txtNewCid.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtnGroupCourse = new javax.swing.ButtonGroup();
        pnlStudentPayment = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentPayment = new javax.swing.JTable();
        lblCloseA = new javax.swing.JLabel();
        pnlNewCourse = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        cmbNewCourse = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbNewBranch = new javax.swing.JComboBox();
        txtNewCid = new javax.swing.JTextField();
        txtNewCourse = new javax.swing.JTextField();
        txtNewBatch = new javax.swing.JTextField();
        txtNCBatch = new javax.swing.JTextField();
        txtNewCourseBalance = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        pnlPayment = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sepRid = new javax.swing.JSeparator();
        txtRID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtAmount = new javax.swing.JTextField();
        btnFinish = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        txtNIC = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        txtNBalance = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        txtRecievedAMount = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        sepName = new javax.swing.JSeparator();
        txtName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        jSeparator6 = new javax.swing.JSeparator();
        rbtnRegistered = new javax.swing.JRadioButton();
        rbtnNew = new javax.swing.JRadioButton();
        txtRCID = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        txtDiscount = new javax.swing.JTextField();
        lblHome = new javax.swing.JLabel();
        lblMinimize = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtCourseFee = new javax.swing.JTextField();
        txtNewRCID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtPaidFromFee = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        pnlRegistererd = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        txtBalance = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtOldCourse = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        txtOldBatch = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        txtCid = new javax.swing.JTextField();
        txtBid = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlStudentPayment.setBackground(new java.awt.Color(49, 64, 187));
        pnlStudentPayment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblStudentPayment.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tblStudentPayment.setForeground(new java.awt.Color(0, 153, 153));
        tblStudentPayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Batch", "Date", "Amount", "Payment Detail", "Balance"
            }
        ));
        tblStudentPayment.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblStudentPayment);

        pnlStudentPayment.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 550, 200));

        lblCloseA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/billingSystem/resources/Error-icon.png"))); // NOI18N
        lblCloseA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseAMouseEntered(evt);
            }
        });
        pnlStudentPayment.add(lblCloseA, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 30, 30));

        getContentPane().add(pnlStudentPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 580, 340));

        pnlNewCourse.setBackground(new java.awt.Color(255, 255, 255));
        pnlNewCourse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlNewCourse.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Course");
        pnlNewCourse.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 140, 30));

        cmbNewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNewCourseActionPerformed(evt);
            }
        });
        pnlNewCourse.add(cmbNewCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 140, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Balance");
        pnlNewCourse.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 140, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Branch");
        pnlNewCourse.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, 30));

        cmbNewBranch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Panadura", "Galle" }));
        cmbNewBranch.setSelectedIndex(-1);
        cmbNewBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNewBranchActionPerformed(evt);
            }
        });
        pnlNewCourse.add(cmbNewBranch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 120, 30));
        pnlNewCourse.add(txtNewCid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 50, -1));
        pnlNewCourse.add(txtNewCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 70, -1));
        pnlNewCourse.add(txtNewBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 50, -1));

        txtNCBatch.setBorder(null);
        pnlNewCourse.add(txtNCBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 120, 30));

        txtNewCourseBalance.setBorder(null);
        pnlNewCourse.add(txtNewCourseBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 170, 120, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Batch");
        pnlNewCourse.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 140, 30));
        pnlNewCourse.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));
        pnlNewCourse.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 120, 20));
        pnlNewCourse.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 120, 20));

        getContentPane().add(pnlNewCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, 380, 210));

        pnlPayment.setBackground(new java.awt.Color(255, 255, 255));
        pnlPayment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 193, 161));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Payments");
        jLabel1.setOpaque(true);
        pnlPayment.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1100, 80));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Registration No");
        pnlPayment.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 140, 30));
        pnlPayment.add(sepRid, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 120, 10));

        txtRID.setBorder(null);
        pnlPayment.add(txtRID, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 120, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Amount");
        pnlPayment.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 140, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Balance Amount");
        pnlPayment.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, 140, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Received Amount");
        pnlPayment.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 490, 140, 30));
        pnlPayment.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 470, 180, -1));

        txtAmount.setBorder(null);
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        pnlPayment.add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 440, 180, 30));

        btnFinish.setBackground(new java.awt.Color(153, 255, 153));
        btnFinish.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });
        pnlPayment.add(btnFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 650, 110, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("NIC");
        pnlPayment.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 140, 30));
        pnlPayment.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 200, 10));

        txtNIC.setBorder(null);
        pnlPayment.add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 200, 30));
        pnlPayment.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 570, 180, 10));

        txtNBalance.setBorder(null);
        pnlPayment.add(txtNBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, 180, 30));
        pnlPayment.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 520, 180, -1));

        txtRecievedAMount.setBorder(null);
        txtRecievedAMount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecievedAMountActionPerformed(evt);
            }
        });
        pnlPayment.add(txtRecievedAMount, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 490, 180, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Name");
        pnlPayment.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 140, 30));
        pnlPayment.add(sepName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 390, 10));

        txtName.setBorder(null);
        pnlPayment.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 390, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Type");
        pnlPayment.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 140, 30));

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Full", "Half", "Balance" }));
        cmbType.setSelectedIndex(-1);
        cmbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTypeItemStateChanged(evt);
            }
        });
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });
        pnlPayment.add(cmbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 440, 140, 30));
        pnlPayment.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 1000, 20));

        rbtnGroupCourse.add(rbtnRegistered);
        rbtnRegistered.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbtnRegistered.setText("Registered Course");
        rbtnRegistered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnRegisteredActionPerformed(evt);
            }
        });
        pnlPayment.add(rbtnRegistered, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, -1, -1));

        rbtnGroupCourse.add(rbtnNew);
        rbtnNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbtnNew.setText("New Course");
        rbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNewActionPerformed(evt);
            }
        });
        pnlPayment.add(rbtnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, -1, -1));
        pnlPayment.add(txtRCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 50, 30));

        lblSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/billingSystem/resources/icons8-search-30.png"))); // NOI18N
        lblSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSearchMouseExited(evt);
            }
        });
        pnlPayment.add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 174, 30, 40));
        pnlPayment.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 520, 180, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Tax");
        pnlPayment.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 140, 30));

        txtTax.setBorder(null);
        pnlPayment.add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 180, 30));
        pnlPayment.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 570, 180, -1));

        txtDiscount.setBorder(null);
        pnlPayment.add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, 180, 30));

        lblHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/billingSystem/resources/icons8-home-55.png"))); // NOI18N
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHomeMouseExited(evt);
            }
        });
        pnlPayment.add(lblHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 60, 50));

        lblMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/billingSystem/resources/icons8-minimize-window-48.png"))); // NOI18N
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseExited(evt);
            }
        });
        pnlPayment.add(lblMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 0, 50, 40));

        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/billingSystem/resources/icons8-close-window-48.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });
        pnlPayment.add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 0, 50, 40));

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 51, 102));
        pnlPayment.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 10, 110, 30));

        lblDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 51, 102));
        pnlPayment.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 110, 30));

        txtCourseFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseFeeActionPerformed(evt);
            }
        });
        pnlPayment.add(txtCourseFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 600, 90, -1));

        txtNewRCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewRCIDActionPerformed(evt);
            }
        });
        pnlPayment.add(txtNewRCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 450, 50, 30));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Discount");
        pnlPayment.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 140, 30));
        pnlPayment.add(txtPaidFromFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 540, 60, -1));
        pnlPayment.add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, 60, -1));

        pnlRegistererd.setBackground(new java.awt.Color(255, 255, 255));
        pnlRegistererd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlRegistererd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Course");
        pnlRegistererd.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Batch");
        pnlRegistererd.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 140, 30));
        pnlRegistererd.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 140, 10));

        txtBalance.setBorder(null);
        pnlRegistererd.add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 140, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Balance");
        pnlRegistererd.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 140, 30));

        txtOldCourse.setBorder(null);
        pnlRegistererd.add(txtOldCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 140, 30));
        pnlRegistererd.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 140, 10));

        txtOldBatch.setBorder(null);
        pnlRegistererd.add(txtOldBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 140, 30));
        pnlRegistererd.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 140, 10));
        pnlRegistererd.add(txtCid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 50, 30));

        txtBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBidActionPerformed(evt);
            }
        });
        pnlRegistererd.add(txtBid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 50, 30));

        pnlPayment.add(pnlRegistererd, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, 380, 210));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Due Date");
        pnlPayment.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 140, 30));

        txtDueDate.setBorder(null);
        pnlPayment.add(txtDueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 590, 180, 30));
        pnlPayment.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 620, 180, 30));

        btnView.setBackground(new java.awt.Color(204, 153, 255));
        btnView.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        pnlPayment.add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 70, 30));

        getContentPane().add(pnlPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        if (rbtnRegistered.isSelected()) {
            paymentRegisteredCourse();
            btnView.setEnabled(true);
            JasperReport loadObject;
        try {
            loadObject = (JasperReport) JRLoader.loadObject(PaymentsForm.class.getResourceAsStream("/lk/ijse/billingSystem/report/BillReport.jasper"));

            HashMap<String, Object> parameters = new HashMap<String, Object>();
            parameters.put("date", lblDate.getText());
            parameters.put("nic", txtNIC.getText());
            parameters.put("Name", txtName.getText());
            parameters.put("Batch", txtOldBatch.getText());
            parameters.put("CommenceDate", lblDate.getText());
            parameters.put("course", cmbNewCourse.getSelectedItem());
            parameters.put("description", txtState.getText());
            parameters.put("amount", txtAmount.getText());
            parameters.put("Total", txtAmount.getText());
            parameters.put("received", txtRecievedAMount.getText());
            parameters.put("Balance", txtNBalance.getText());
            parameters.put("due", txtDueDate.getText());
            
            JasperPrint fillReport = JasperFillManager.fillReport(loadObject, parameters, new JREmptyDataSource());
            JasperViewer.viewReport(fillReport, false);
        } catch (JRException ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            clearText();
        } else if (rbtnNew.isSelected()) {
            try {
                Reg_CourseDTO reg_CourseDTO = new Reg_CourseDTO(txtRID.getText(), Integer.parseInt(txtNewCid.getText()), Integer.parseInt(txtNewBatch.getText()));
                boolean isAdded = reg_CourseController.addReg_Course(reg_CourseDTO);

                int rcid = reg_CourseController.searchRCID(txtRID.getText(), Integer.parseInt(txtNewCid.getText()), Integer.parseInt(txtNewBatch.getText()));
                txtNewRCID.setText(Integer.toString(rcid));

                if (rcid != 0) {
                    paymentNewCourse();
                    btnView.setEnabled(true);
                    JasperReport loadObject;
        try {
            loadObject = (JasperReport) JRLoader.loadObject(PaymentsForm.class.getResourceAsStream("/lk/ijse/billingSystem/report/BillReport.jasper"));

            HashMap<String, Object> parameters = new HashMap<String, Object>();
            parameters.put("date", lblDate.getText());
            parameters.put("nic", txtNIC.getText());
            parameters.put("Name", txtName.getText());
            parameters.put("Batch", txtNCBatch.getText());
            parameters.put("CommenceDate", lblDate.getText());
            parameters.put("course", cmbNewCourse.getSelectedItem());
            parameters.put("description", "Full");
            parameters.put("amount", txtAmount.getText());
            parameters.put("Total", txtAmount.getText());
            parameters.put("received", txtRecievedAMount.getText());
            parameters.put("Balance", txtNBalance.getText());
            parameters.put("due", txtDueDate.getText());
            
            JasperPrint fillReport = JasperFillManager.fillReport(loadObject, parameters, new JREmptyDataSource());
            JasperViewer.viewReport(fillReport, false);
        } catch (JRException ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
                    clearText();
                }
            } catch (Exception ex) {
                Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
                

        // TODO add your handling code here:
    }//GEN-LAST:event_btnFinishActionPerformed

    private void txtRecievedAMountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecievedAMountActionPerformed
        double ra = Double.parseDouble(txtRecievedAMount.getText());
        double nbalance = ra - Double.parseDouble(txtAmount.getText());
        txtNBalance.setText(Double.toString(nbalance));
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecievedAMountActionPerformed

    private void cmbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTypeItemStateChanged
        try {
            
                if (rbtnRegistered.isSelected()) {
                if (cmbType.getSelectedItem() == "Balance") {
                    //txtState.setText("Paid");
                    balance();
                }
            } else if (rbtnNew.isSelected()) {
                if (cmbType.getSelectedItem() == "Full") {
                    //txtState.setText("Paid");
                    Paid();
                    fullpayment();
                } else if (cmbType.getSelectedItem() == "Half") {
                    //txtState.setText("Install");
                    Paid();
                    halfPayment();
                    
                }
                
            
            }
            
        } catch (Exception ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbTypeItemStateChanged

    private void rbtnRegisteredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnRegisteredActionPerformed
        try {
            pnlStudentPayment.setVisible(false);
            pnlNewCourse.setVisible(false);
            pnlRegistererd.setVisible(true);
            String rid = txtRID.getText();
            txtState.setText("Install");
            String state = txtState.getText();
            //System.out.println(state);

            Reg_CourseDTO reg_CourseDTO = reg_CourseController.searchPaid(rid, state);
//            if (reg_CourseDTO.getRcid()==0) {
//                JOptionPane.showMessageDialog(this, "Paid");
//            }else{
            txtRCID.setText(Integer.toString(reg_CourseDTO.getRcid()));
            txtCid.setText(Integer.toString(reg_CourseDTO.getCid()));
            txtBid.setText(Integer.toString(reg_CourseDTO.getBid()));
            txtBalance.setText(Double.toString(reg_CourseDTO.getBalance()));

            int cid = Integer.parseInt(txtCid.getText());

            CourseDTO courseDTO = courseController.searchById(cid);
            txtOldCourse.setText(courseDTO.getName());

            int bid = Integer.parseInt(txtBid.getText());

            BatchDTO batchDTO = batchController.searchById(bid);
            txtOldBatch.setText(batchDTO.getName());
            //}
            //pnlInstall.setVisible(true);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rbtnRegisteredActionPerformed

    private void rbtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNewActionPerformed
        pnlStudentPayment.setVisible(false);
        pnlRegistererd.setVisible(false);
        pnlNewCourse.setVisible(true);
        String rid = txtRID.getText();
        String course = (String) cmbNewCourse.getSelectedItem();
        if (course != null) {
            try {
                CourseDTO courseDTO = courseController.searchCourse(course);
                txtNewCid.setText(Integer.toString(courseDTO.getCid()));
                String branch = (String) cmbNewBranch.getSelectedItem();
                int cid = Integer.parseInt(txtNewCid.getText());
                if (cid != 0 & branch != null) {
                    loadBatches(branch, cid);
                    //loadDetails();
                }
                txtRCID.setText("");
                // TODO add your handling code here:
            } catch (Exception ex) {
                Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_rbtnNewActionPerformed

    private void lblSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseClicked
        lblSearch.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-search-40.png"));
        String nic = txtNIC.getText();

        if (nic != null) {

            try {
                StudentDTO studentDTO = studentController.searchStudent(nic);
                if (studentDTO != null) {
                    txtName.setText(studentDTO.getName());
                    txtRID.setText(studentDTO.getRid());
                    ArrayList<Reg_CourseDTO> searchDetail = reg_CourseController.searchDetail(txtRID.getText());
                    if (searchDetail != null) {
                        
                        btnView.setEnabled(true);
                    } else {
                        btnView.setEnabled(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No such Student");
                }
            } catch (Exception ex) {
                Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Enter NIC");
        }
    }//GEN-LAST:event_lblSearchMouseClicked

    private void lblSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseEntered
        lblSearch.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-search-40.png"));

        // TODO add your handling code here:
    }//GEN-LAST:event_lblSearchMouseEntered

    private void lblSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSearchMouseExited
        lblSearch.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-search-30.png"));

        // TODO add your handling code here:
    }//GEN-LAST:event_lblSearchMouseExited

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        lblHome.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-home-64.png"));
        Main m = new Main();
        this.setVisible(false);
        m.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_lblHomeMouseClicked

    private void lblHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseEntered
        lblHome.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-home-64.png"));

        // TODO add your handling code here:
    }//GEN-LAST:event_lblHomeMouseEntered

    private void lblHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseExited
        lblHome.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-home-55.png"));

        // TODO add your handling code here:
    }//GEN-LAST:event_lblHomeMouseExited

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        lblMinimize.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-minimize-window-55.png"));
        this.setExtendedState(ICONIFIED);
        // TODO add your handling code here:
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void lblMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseEntered
        lblMinimize.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-minimize-window-55.png"));
    }//GEN-LAST:event_lblMinimizeMouseEntered

    private void lblMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseExited
        lblMinimize.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-minimize-window-48.png"));
        // TODO add your handling code here:
    }//GEN-LAST:event_lblMinimizeMouseExited

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        lblClose.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-close-window-55.png"));
        int response = JOptionPane.showConfirmDialog(this, "Are you sure want to exit?");
        if (response == 0) {
            System.exit(0);
        } else if (response == 1) {
        } else if (response == 2) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-close-window-55.png"));
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setIcon(new javax.swing.ImageIcon("J:\\3rd semester\\Niroth Sir\\4\\images\\icons8-close-window-48.png"));
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCloseMouseExited

    private void txtCourseFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseFeeActionPerformed

    private void txtNewRCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewRCIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewRCIDActionPerformed

    private void txtBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBidActionPerformed

    private void cmbNewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNewCourseActionPerformed
        try {

            String course = (String) cmbNewCourse.getSelectedItem();
            if (course != null) {
                CourseDTO courseDTO = courseController.searchCourse(course);
                txtNewCid.setText(Integer.toString(courseDTO.getCid()));
                txtNewCourse.setText(course);
                String branch = (String) cmbNewBranch.getSelectedItem();
                int cid = Integer.parseInt(txtNewCid.getText());
                if (cid != 0 & branch != null) {
                    loadBatches(branch, cid);
                    loadDetails();

                    //                txtFee.setText(Double.toString(courseDTO.getRegFee()));
                    //                double nbt = Double.parseDouble(courseDTO.getTax());
                    //                double regFee = courseDTO.getRegFee();
                    //                double tax = regFee / 100 * nbt;
                    //                int cid = Integer.parseInt(txtCid.getText());
                    //                txtNbt.setText(Double.toString(tax));
                    //                txtAmount.setText(Double.toString(regFee + tax));
                    //                String branch = txtBranchName.getText();
                    //                if (branch != null || cid != 0) {
                    //                    loadBatches(branch, cid);
                    //                } else {
                    //                    System.out.println("null");
                    //                }
                }
            }

            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNewCourseActionPerformed

    private void cmbNewBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNewBranchActionPerformed
        String branch = (String) cmbNewBranch.getSelectedItem();

        int cid = Integer.parseInt(txtNewCid.getText());
        loadBatches(branch, cid);

        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNewBranchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        try {
            pnlStudentPayment.setVisible(true);
            pnlNewCourse.setVisible(false);
            pnlRegistererd.setVisible(false);

            ArrayList<Reg_CourseDTO> alReg_Courses = reg_CourseController.searchDetail(txtRID.getText());
            DefaultTableModel dtm = (DefaultTableModel) tblStudentPayment.getModel();
            dtm.setRowCount(0);
            for (Reg_CourseDTO all : alReg_Courses) {
                CourseDTO course = courseController.searchById(all.getCid());
                BatchDTO batch = batchController.searchById(all.getBid());
                PaymentDTO payment = paymentController.searchById(all.getRcid());

                Object[] rowData = {course.getName(),
                    batch.getName(),
                    payment.getPDate(),
                    payment.getPaid(),
                    all.getPay_Detail(),
                    all.getBalance()
                };
                dtm.addRow(rowData);

            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void lblCloseAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseAMouseClicked
        pnlStudentPayment.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCloseAMouseClicked

    private void lblCloseAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseAMouseEntered
        lblCloseA.setSize(40, 40);
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCloseAMouseEntered

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cmbNewBranch;
    private javax.swing.JComboBox cmbNewCourse;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblCloseA;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel pnlNewCourse;
    private javax.swing.JPanel pnlPayment;
    private javax.swing.JPanel pnlRegistererd;
    private javax.swing.JPanel pnlStudentPayment;
    private javax.swing.ButtonGroup rbtnGroupCourse;
    private javax.swing.JRadioButton rbtnNew;
    private javax.swing.JRadioButton rbtnRegistered;
    private javax.swing.JSeparator sepName;
    private javax.swing.JSeparator sepRid;
    private javax.swing.JTable tblStudentPayment;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtBid;
    private javax.swing.JTextField txtCid;
    private javax.swing.JTextField txtCourseFee;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtNBalance;
    private javax.swing.JTextField txtNCBatch;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNewBatch;
    private javax.swing.JTextField txtNewCid;
    private javax.swing.JTextField txtNewCourse;
    private javax.swing.JTextField txtNewCourseBalance;
    private javax.swing.JTextField txtNewRCID;
    private javax.swing.JTextField txtOldBatch;
    private javax.swing.JTextField txtOldCourse;
    private javax.swing.JTextField txtPaidFromFee;
    private javax.swing.JTextField txtRCID;
    private javax.swing.JTextField txtRID;
    private javax.swing.JTextField txtRecievedAMount;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtTax;
    // End of variables declaration//GEN-END:variables

    private void loadDate() {
        Date date = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
        String dateFormat = sf.format(date);
        lblDate.setText(dateFormat);
    }

    private void loadTime() {
        new javax.swing.Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date d1 = new Date();
                SimpleDateFormat df = new SimpleDateFormat("hh:mm:ss ");
                String DateFormat = df.format(d1);
                lblTime.setText(DateFormat);
            }
        }).start();
    }

    void loadBatches(String branch, int cid) {
        // cmbBatch.removeAllItems();
        try {
            BatchDTO batchDTO = batchController.getBatch(branch, cid);
            if (batchDTO != null) {
                txtNCBatch.setText(batchDTO.getName());
                txtNewBatch.setText(Integer.toString(batchDTO.getBid()));
                System.out.println(batchDTO.getBid());
            } else {
                JOptionPane.showMessageDialog(this, "No such Batch");
            }

//            ArrayList<BatchDTO> alBatches = batchController.getBatches(branch, cid);
//            for (BatchDTO Batch : alBatches) {
//                cmbBatch.addItem(Batch.getName());
//                //cmbBatch.setSelectedIndex(-1);
//            }
        } catch (Exception ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadCourses() {
        cmbNewCourse.removeAllItems();
        try {
            ArrayList<CourseDTO> alCourses = courseController.getCourses();
            for (CourseDTO course : alCourses) {
                cmbNewCourse.addItem(course.getName());
                cmbNewCourse.setSelectedIndex(-1);
            }
        } catch (Exception ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void loadDetails() {
        String course = (String) cmbNewCourse.getSelectedItem();
        if (course != null) {
            try {
//                CourseDTO courseDTO = courseController.searchCourse(course);
//                txtRegFee.setText(Double.toString(courseDTO.getRegFee()));
//                double nbt = Double.parseDouble(courseDTO.getTax());
//                double regFee = courseDTO.getRegFee();
//                double tax = regFee / 100 * nbt;
//                int cid = Integer.parseInt(txtCid.getText());
//                txtNbt.setText(Double.toString(tax));
//                txtAmount.setText(Double.toString(regFee + tax));
            } catch (Exception ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    void halfPayment() {
        try {
            CourseDTO courseDTO = courseController.searchCourse((String) cmbNewCourse.getSelectedItem());

            String duration = courseDTO.getDuration();

            BatchDTO batchDTO = batchController.searchBatch(txtNCBatch.getText());
            Date d = batchDTO.getInstall_Date();
            SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
            String date = sf.format(d);
            txtDueDate.setText(date);

            double cFee = courseDTO.getFee();
            txtCourseFee.setText(Double.toString(cFee));
            double nbt = Double.parseDouble(courseDTO.getTax());
            double fee = courseDTO.getFee() / 2;
            txtPaidFromFee.setText(Double.toString(fee));
            double tax = fee / 100 * nbt;
            txtTax.setText(Double.toString(tax));
            txtTax.setText(Double.toString(tax));
            txtDiscount.setText("0");
            txtAmount.setText(Double.toString(fee + tax));
            txtState.setText("Install");

        } catch (Exception ex) {
            Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void fullpayment() {
        try {
            CourseDTO courseDTO = courseController.searchCourse((String) cmbNewCourse.getSelectedItem());
            double cFee = courseDTO.getFee();
            txtCourseFee.setText(Double.toString(cFee));
            double nbt = Double.parseDouble(courseDTO.getTax());
            double fee = courseDTO.getFee();
            txtPaidFromFee.setText(Double.toString(fee));
            double tax = fee / 100 * nbt;
            txtTax.setText(Double.toString(tax));
            double dicount = Double.parseDouble(courseDTO.getDiscount());
            double dis = fee / 100 * dicount;
            txtTax.setText(Double.toString(tax));
            txtDiscount.setText(Double.toString(dis));
            txtPaidFromFee.setText(Double.toString(fee));
            txtAmount.setText(Double.toString(fee - dis + tax));
            txtState.setText("Paid");

            txtNewCourseBalance.setText("0.0");
            txtDueDate.setText("-");

        } catch (Exception ex) {
            Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void balance() {
        try {
            CourseDTO courseDTO = courseController.searchCourse(txtNewCourse.getText());
            double cFee = courseDTO.getFee();
            txtCourseFee.setText(Double.toString(cFee));

            BatchDTO batchDTO = batchController.searchById(Integer.parseInt(txtBid.getText()));
            Date install_Date = batchDTO.getInstall_Date();

            double nbt = Double.parseDouble(courseDTO.getTax());
            double fee = courseDTO.getFee() / 2;
            txtPaidFromFee.setText(Double.toString(fee));
            double tax = fee / 100 * nbt;
            txtTax.setText(Double.toString(tax));
            txtTax.setText(Double.toString(tax));
            txtDiscount.setText("0");

            txtState.setText("Paid");

            txtDueDate.setText("-");

            double lFee = 0;

            String sCur_Date = lblDate.getText();
            Date curDate = new SimpleDateFormat("dd-MM-yyyy").parse(sCur_Date);
            if (curDate.compareTo(install_Date) > 0) {
                long diffInMillies = Math.abs(curDate.getTime() - install_Date.getTime());
                long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
                double t2 = fee / 100 * diff;
                lFee = fee + t2;
                System.out.println(diff);
                System.out.println(lFee);
            } else if (curDate.compareTo(install_Date) <= 0) {

                lFee = fee;
                System.out.println(lFee);

            }
            SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
            String i = sf.format(install_Date);

            System.out.println(sCur_Date);

            System.out.println(i);
            //System.out.println(diff);
            //long diff=curDate-install_Date;

            txtAmount.setText(Double.toString(lFee + tax));

        } catch (Exception ex) {
            Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void paymentRegisteredCourse() {
        try {
            CourseDTO courseDTO = courseController.searchCourse(txtOldCourse.getText());

            Double courseFee = courseDTO.getFee();
            String p = txtCourseFee.getText();
            double paid = Double.parseDouble(p);
            double c = courseDTO.getFee();
            double balance = (c - paid);

            System.out.println(Double.parseDouble(txtTax.getText()));
            System.out.println(Double.parseDouble(txtDiscount.getText()));
            System.out.println(paid);
            System.out.println(balance);

            String sDate1 = lblDate.getText();
            Date pDate = new SimpleDateFormat("dd-MM-yyyy").parse(sDate1);
//            String sDate2 = txtDueDate.getText();
//            Date dueDate = new SimpleDateFormat("dd-MM-yyyy").parse(sDate2);
//            
            Reg_CourseDTO reg_CourseDTO = new Reg_CourseDTO(Integer.parseInt(txtRCID.getText()), balance, txtState.getText());
            PaymentDTO paymentDTO = new PaymentDTO(pDate, Double.parseDouble(txtTax.getText()), Double.parseDouble(txtDiscount.getText()), Double.parseDouble(txtPaidFromFee.getText()), Double.parseDouble(txtAmount.getText()), balance, Integer.parseInt(txtRCID.getText()));

            System.out.println("1111111111111111111");
            System.out.println(Integer.parseInt(txtRCID.getText()));
            System.out.println(txtRID.getText());
            System.out.println(Integer.parseInt(txtCid.getText()));
            System.out.println(Integer.parseInt(txtBid.getText()));
            System.out.println(balance);
            System.out.println(txtState.getText());
            //boolean update = reg_CourseController.update(reg_CourseDTO);
            boolean isAdded = paymentController.AddHalfPayment(paymentDTO, reg_CourseDTO);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Payment has been Successfully Added");
            } else {
                JOptionPane.showMessageDialog(this, "Payment hasn't been Successfully Added");
            }

//            boolean isAdded = paymentController.AddPayment(paymentDTO, reg_CourseDTO);
//            if (isAdded) {
//                JOptionPane.showMessageDialog(this, "Payment has been Successfully Added");
//            } else {
//                JOptionPane.showMessageDialog(this, "Payment hasn't been Successfully Added");
//            }
        } catch (Exception ex) {
            Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void paymentNewCourse() {
        try {
            CourseDTO courseDTO = courseController.searchCourse(txtNewCourse.getText());

            double courseFee = courseDTO.getFee();
//            String p = txtCourseFee.getText();
//            double paid = Double.parseDouble(p);
//            double c = courseDTO.getFee();

            double balance = (courseFee - Double.parseDouble(txtPaidFromFee.getText()));

            System.out.println("Tax " + Double.parseDouble(txtTax.getText()));
            System.out.println("discount " + Double.parseDouble(txtDiscount.getText()));
            System.out.println("balance " + balance);
            System.out.println("Amount " + Double.parseDouble(txtAmount.getText()));

//            if (cmbType.getSelectedItem().equals("Full")) {
//                            PaymentDTO paymentDTO = new PaymentDTO(pDate, Double.parseDouble(txtTax.getText()), Double.parseDouble(txtDiscount.getText()), Double.parseDouble(txtAmount.getText()), balance, dueDate, Integer.parseInt(txtNewRCID.getText()));
//
//            }
            String sDate1 = lblDate.getText();
            Date pDate = new SimpleDateFormat("dd-MM-yyyy").parse(sDate1);
//            String sDate2 = txtDueDate.getText();
//            Date dueDate = new SimpleDateFormat("dd-MM-yyyy").parse(sDate2);

            PaymentDTO paymentDTO = new PaymentDTO(pDate, Double.parseDouble(txtTax.getText()), Double.parseDouble(txtDiscount.getText()), Double.parseDouble(txtPaidFromFee.getText()), Double.parseDouble(txtAmount.getText()), balance, Integer.parseInt(txtNewRCID.getText()));
            //Reg_CourseDTO reg_CourseDTO = new Reg_CourseDTO(txtRID.getText(), Integer.parseInt(txtNewCid.getText()), Integer.parseInt(txtNewBatch.getText()), balance, txtState.getText());
            Reg_CourseDTO reg_CourseDTO = new Reg_CourseDTO(Integer.parseInt(txtNewRCID.getText()), balance, txtState.getText());
            System.out.println("1111111111111111111");
            System.out.println(Integer.parseInt(txtNewRCID.getText()));
            System.out.println(txtRID.getText());
            System.out.println(Integer.parseInt(txtNewCid.getText()));
            System.out.println(Integer.parseInt(txtNewBatch.getText()));
            System.out.println(balance);
            System.out.println(txtState.getText());
            boolean isAdded = paymentController.AddHalfPayment(paymentDTO, reg_CourseDTO);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Payment has been Successfully Added");
            } else {
                JOptionPane.showMessageDialog(this, "Payment hasn't been Successfully Added");
            }
        } catch (Exception ex) {
            Logger.getLogger(CourseRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void clearText() {
        txtAmount.setText("");
        txtCourseFee.setText("");
        txtDiscount.setText("");
        txtNIC.setText("");
        txtName.setText("");
        txtNewBatch.setText("");
        txtNewCid.setText("");
        txtNewCourse.setText("");
        txtNewRCID.setText("");
        txtRCID.setText("");
        txtRID.setText("");
        txtTax.setText("");
        txtDueDate.setText("");
        txtNCBatch.setText("");
        //txtRID.setText("");
        //cmbNewBranch.setSelectedIndex(-1);
        txtNewBatch.setText("");
        //cmbNewCourse.setSelectedIndex(-1);
    }

    private void txtFields() {
        txtCid.setVisible(false);
        txtBid.setVisible(false);
        txtCourseFee.setVisible(false);
        txtNewCid.setVisible(false);
        txtNewBatch.setVisible(false);
        txtNewCourse.setVisible(false);
        txtState.setVisible(false);
        txtPaidFromFee.setVisible(false);
        txtNewRCID.setVisible(false);
        txtRCID.setVisible(false);
    }
    void Paid(){
        try {
            boolean searchPayment = reg_CourseController.searchPayment(txtRID.getText(), Integer.parseInt(txtNewBatch.getText()));
            if (searchPayment) {
                
                JOptionPane.showMessageDialog(this, "This student has been Paid");
                
                //cmbType.setSelectedIndex(-1);
                txtNCBatch.setText("");
                cmbNewBranch.setSelectedIndex(-1);
                cmbNewCourse.setSelectedIndex(-1);
                
                txtNewCid.setText("");
                txtAmount.setText("");
                txtCourseFee.setText("");
                txtDiscount.setText("");
                txtNewCourse.setText("");
                txtTax.setText("");
                txtDueDate.setText("");
            }
        } catch (Exception ex) {
            Logger.getLogger(PaymentsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
